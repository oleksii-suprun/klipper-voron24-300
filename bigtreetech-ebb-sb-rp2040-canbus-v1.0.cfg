# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# RP2040 with "USB" or "CAN bus (on gpio4/gpio5)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[include stealthburner_leds.cfg]

[mcu EBBCan]
# serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: c036ca33da25
# canbus_uuid: 584829d502e1

# [temperature_sensor EBB_NTC]
# sensor_type: Generic 3950
# sensor_pin: EBBCan:gpio28

[adxl345]
cs_pin: EBBCan:gpio1
spi_software_sclk_pin: EBBCan:gpio2
spi_software_mosi_pin: EBBCan:gpio0
spi_software_miso_pin: EBBCan:gpio3
axes_map: z,y,x

[resonance_tester]
probe_points: 150, 150, 20
accel_chip: adxl345

[extruder]
step_pin: EBBCan:gpio18
dir_pin: EBBCan:gpio19
enable_pin: !EBBCan:gpio17
microsteps: 32
rotation_distance: 22.766491851246
gear_ratio: 50:10
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan:gpio7
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: EBBCan:gpio27
min_temp: 0
max_temp: 270
min_extrude_temp: 160
max_extrude_only_distance: 150
pressure_advance: 0.06

# sensor_type: MAX31865
# sensor_pin: EBBCan:gpio9
# spi_software_sclk_pin: EBBCan:gpio10
# spi_software_mosi_pin: EBBCan:gpio8
# spi_software_miso_pin: EBBCan:gpio11
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[stepper_x]
endstop_pin: EBBCan:gpio24

[tmc2209 extruder]
uart_pin: EBBCan:gpio20
run_current: 0.35
stealthchop_threshold: 999999

[fan]
##	Print Cooling Fan - CNC_FAN0
pin: EBBCan:gpio13
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##	Hotend Fan - CNC_FAN1
pin: EBBCan:gpio14
heater: extruder
heater_temp: 50.0
max_power: 1.0
kick_start_time: 0.5
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

# [fan_generic 4W_FAN0]
# pin: EBBCan:gpio15
# tachometer_pin: EBBCan:gpio12
# #tachometer_ppr: 1

[neopixel sb_leds]
pin: EBBCan:gpio16

# [bltouch]
# sensor_pin: ^EBBCan:gpio21
# control_pin: EBBCan:gpio22

## NPN and PNP proximity switch types can be set by jumper
#[probe]
#pin: ^EBBCan:gpio6

[filament_switch_sensor filament]
switch_pin: EBBCan:gpio6

[probe]
pin: ^!EBBCan:gpio22
x_offset: 0
y_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.004
samples_tolerance_retries: 5
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
